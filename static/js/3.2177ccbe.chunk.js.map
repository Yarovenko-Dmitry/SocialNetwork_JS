{"version":3,"sources":["components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","Preloader","Post","item","message","likesCount","MyPosts","React","memo","postsElenments","posts","map","p","createRef","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserID","history","push","getUserProfile","getStatus","console","log","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.2177ccbe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1b95s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__Vhr_n\",\"posts\":\"MyPosts_posts__3hJiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2c1mq\"};","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nexport const ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() =>{\r\n    setStatus(props.status);\r\n  },[props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deActivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!editMode &&\r\n      <div>\r\n        <span onDoubleClick={activateEditMode}>{props.status || 'no STATUS'}</span>\r\n      </div>\r\n      }\r\n      {editMode &&\r\n      <div>\r\n        <input autoFocus={true}\r\n               onBlur={deActivateEditMode}\r\n               onChange={onStatusChange}\r\n               value={status}/>\r\n      </div>\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport {ProfileStatusWithHooks} from './ProfileStatusWithHooks';\r\n\r\nexport const ProfileInfo = ({profile,status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large}/>\r\n        avatar + discription\r\n        <ProfileStatusWithHooks status={status}\r\n                                updateStatus={updateStatus}/>\r\n      </div>\r\n    </div>\r\n  )\r\n};","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src={'https://i.pinimg.com/originals/63/2d/6f/632d6f00a809cf8c77f65142395458de.png'}/>\r\n      {props.message}\r\n      <div>\r\n        <span>like </span>{props.likesCount}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n  let postsElenments = props.posts.map(p =>\r\n    <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  const onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n      <div className={s.posts}>\r\n        {postsElenments}\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea}\r\n               name={'newPostText'}\r\n               placeholder={'Enter your post'}\r\n               validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport {ProfileInfo} from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile}\r\n                   status={props.status}\r\n                   updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router\";\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserID;\r\n      if (!userId) {\r\n        this.props.history.push('/login')\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    console.log('render profile')\r\n    return (\r\n      <Profile {...this.props}\r\n               profile={this.props.profile}\r\n               status={this.props.status}\r\n               updateStatus={this.props.updateStatus}/>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log('mapStateToProps')\r\n  return ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserID: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  });\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n  withRouter,\r\n  // withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n"],"sourceRoot":""}